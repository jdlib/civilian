import java.util.Map
import org.civilian.application.Application
import org.civilian.processor.Processor
import org.civilian.processor.ProcessorList
import org.civilian.text.service.LocaleServiceList
import org.civilian.content.ContentSerializer


template(Application app) mixin html
{{
	<table class="table table-striped table-bordered table-condensed">
	<tr>
		<th>Parameter</th>
		<th>Value</th>
		<th>API</th>
	</tr>
	<tr>
		<td>App Class</td>
		<td>^{app.getClass().getName()}</td>
		<td>org.civilian.Application.getClass()</td>
	</tr>
	<tr>
		<td>App Path</td>
		<td><a target="_blank" href="^{html.url(app)}">^{app.getPath()}</a></td>
		<td>org.civilian.Application.getPath()</td>
	</tr>
	<tr>
		<td>Status</td>
		<td>^{app.getStatus()}</td>
		<td>org.civilian.Application.getStatus()</td>
	</tr>
	<tr>
		<td>Encoding</td>
		<td>^{app.getDefaultEncoding()}</td>
		<td>org.civilian.Application.getDefaultEncoding()</td>
	</tr>
	<tr>
		<td>Locale</td>
		<td>
			@LocaleServiceList services = app.getLocaleServices();
			@for (int i=0; i<services.size(); i++)
				^?{i > 0}|, |^{services.getLocale(i)} 
		</td>
		<td>org.civilian.Application.getLocaleServices().getLocale(i)</td>
	</tr>
	</table>
	@printProcessors(app.getProcessors());
	@printContentSerializers();
}}


private void printContentSerializers()
{{
	<h4>Content Serializers</h4>
	<table class="table table-striped table-bordered table-condensed">
	<tr>
		<th>#</th>
		<th>Content Type</th>
		<th>Class</th>
	</tr>
	@int i=1;
	@for (Map.Entry<String,ContentSerializer> entry : app.getContentSerializers().toMap().entrySet())
		<tr>
			<td>^{i++}</td>
			<td>^{entry.getKey()}</td>
			<td>^{entry.getValue().getClass().getName()}</td>
		</tr>
	</table>
}}


private void printProcessors(ProcessorList processors)
{{
	<h4>Processor Pipeline</h4>
	<table class="table table-striped table-bordered table-condensed">
	<tr>
		<th>#</th>
		<th>Processor</th>
		<th>Info</th>
		<th>Class</th>
	</tr>
	@int i=1;
	@for (Processor processor : processors)
		@String[] infos = processor.getInfo().split("\\n"); 
		<tr>
			<td>^{i++}</td>
			<td>^{processor.getClass().getSimpleName()}</td>
			<td>
				@for (int j=0; j<infos.length; j++)
					^?{j > 0}|<br>|^{html.text(infos[j]);}
			</td>
			<td>^{processor.getClass().getName()}</td>
		</tr>
	</table>
}}
