import java.time.LocalDateTime
import org.civilian.application.Application
import org.civilian.resource.Resource
import org.civilian.util.JavaName
import org.civilian.client.WebResource


template(Resource root, String outputPackage, String outputName, Application app, boolean timestamp)
	package-access
	extends - 
	throws -
{{
	<%%>/**
	<%%> * Generated <%?timestamp%>at <%LocalDateTime.now()%> <%?%>by <%ClientConstGenerator.class.getName()%>.
	<%%> * Do not edit.
	<%%> */
	package <%outputPackage%>;
	
	
	@printResourceClass(root);
}}


private static final String WEBRESOURCE = WebResource.class.getName();


private void printResourceClass(Resource resource)
{{
	@if (!resource.isRoot())
		@// two line spacer
		<%%>
		<%%>
	@printResourceComment(resource);
	@int childCount        = resource.getChildCount();
	@boolean isRoot        = resource.isRoot(); 
	@String className      = isRoot ? outputName : buildClassName(resource);
	@boolean hasController = resource.getControllerSignature() != null;
	public<%?!isRoot%> static<%?%> class <%className%><%?hasController%> extends <%WEBRESOURCE%><%?%> 
	{
		public <%className%><%/%>
		@if (isRoot)
			(String url)
		@else
			(<%WEBRESOURCE%> parent)
		{
			@if (hasController)
				super<%/%>
			@else
				this.resource_ = new <%WEBRESOURCE%><%/%>
			(<%printCtorArgs(resource, "parent");%>);
			
			@// print field definitions
			@for (int i=0; i<childCount; i++)
				@Resource child = resource.getChild(i);
				@boolean childHasController = child.getControllerSignature() != null;
				@if (!hasController)
					this.resource_.<%/%> 
				addChild(<%/%>
				@if (!childHasController)
					(<%/%>
				this.<%buildFieldName(child)%> = new <%/%>
				@if (child.getChildCount() == 0)
					<%WEBRESOURCE%>(<%printCtorArgs(child, hasController ? "this" : "this.resource_");%>)<%/%>
				@else
					<%buildClassName(child)%>(this)<%/%>
				@if (!childHasController)
					).resource_<%/%>
				);
		}
		@// print field declarations
		@for (int i=0; i<childCount; i++)
			<%%>
			@Resource child = resource.getChild(i);
			@printResourceComment(child);
			public final <%child.getChildCount() > 0 ? buildClassName(child) : WEBRESOURCE%> <%buildFieldName(child)%>;
		@for (int i=0; i<childCount; i++)
			@Resource child = resource.getChild(i);
			@if (child.getChildCount() > 0)
				@printResourceClass(child);
		@if (!hasController)
			<%%>
			// hidden since not mapped to a controller
			private final <%WEBRESOURCE%> resource_;
	}
}}



private void printResourceComment(Resource resource)
{{
	<%%>/**
	<%%> * Resource "<%resource%>"<%?resource.isRoot()%> of application <%app.getClass().getName()%><%?%>. 
	<%%> */ 
}}


private void printCtorArgs(Resource resource, String parent)
{{
	@if (!resource.isRoot())
		<%parent%>, <%/%> 
		@if (resource.getSegment() != null)
			"<%resource.getSegment()%>"<%/%>
		@else
			<%app.getControllerConfig().getPathParams().getConstant(resource.getPathParam())%><%/%>
	@else
		url<%/%>
}}


private String buildClassName(Resource resource)
{
	return resource.getSegment() != null ?
		javaName_.makeClass(resource.getSegment()) : 
		javaName_.makeParamClass(resource.getPathParam().getName());
} 


private String buildFieldName(Resource resource)
{
	return resource.getSegment() != null ?
		javaName_.makeVar(resource.getSegment()) : 
		javaName_.makeParamVar(resource.getPathParam().getName());
} 


private final JavaName javaName_ = new JavaName();