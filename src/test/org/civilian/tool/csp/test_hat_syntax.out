/**
 * Generated from test_hat_syntax.csp
 * Do not edit.
 */
package test;


import org.civilian.template.CspTemplate;
import org.civilian.template.mixin.TableMixin;


public class Test_hat_syntax extends CspTemplate
{
	public Test_hat_syntax(String name, int i)
	{
		this.name = name;
		this.i = i;
	}


	@Override protected void init()
	{
		super.init();
		t = new TableMixin(out);
	}


	@Override protected void exit()
	{
		t = null;
		super.exit();
	}


	@Override protected void print() throws Exception
	{
		out.print("escaped hat: ");                                     // line 5: escaped hat:
		out.print("^");                                                 // line 5: ^
		out.println("...");                                             // line 5: ...
		out.println();
		out.print("alpha");                                             // line 7: alpha
		out.println("beta");                                            // line 7: beta
		out.print("skipln");                                            // line 8: skipln
		out.print(" mixed ");                                           // line 9: mixed
		out.print(name);                                                // line 9: ^name
	}
	
	
	private void testConditionalSnippets()
	{
		out.print("pre");                                               // line 15: pre
		if (today)                                                      // line 15: ^?today
		{
			out.print(" today ");                                       // line 15: today
		}
		out.println("post");                                            // line 15: post
		out.print("pre");                                               // line 16: pre
		if (today > 0)                                                  // line 16: ^?{today > 0}
		{
			out.print("is ");                                           // line 16: is
			out.print(name);                                            // line 16: ^name
		}
		out.println("post");                                            // line 16: post
		out.print("expr: ");                                            // line 17: expr:
		out.print(name);                                                // line 17: ^name
		out.print(" or ");                                              // line 17: or
		out.print(name.length());                                       // line 17: ^{name.length()}
		out.printlnIfNotEmpty();
		out.print("stmt: ");                                            // line 18: stmt:
		name = null;                                                    // line 18: ^{name = null;}
		out.printlnIfNotEmpty();
		out.print("line=");                                             // line 19: line=
		if (i > 0)                                                      // line 19: ^?{i > 0}
		{
			out.print(", ");                                            // line 19: ,
		}
		out.print(name.charAt(i));                                      // line 19: ^{name.charAt(i)}
		out.printlnIfNotEmpty();
	}
	
	
	private void testComponentBuilderSyntax()
	{
		t.columns("[]10[]");                                            // line 25: @t.columns("[]10[]");
		t.startTable();                                                 // line 26: @t.startTable();
		org.civilian.template.ComponentBuilder cspCb0 = t;
		cspCb0.startComponent(false);                                   // line 27: t
		out.print("simple");                                            // line 27: simple
		cspCb0.endComponent(false);
		cspCb0 = t.colspan(2);
		cspCb0.startComponent(false);                                   // line 28: t.colspan(2)
		out.print("colspan");                                           // line 28: colspan
		cspCb0.endComponent(false);
		cspCb0 = t.colspan(2);
		cspCb0.startComponent(true);                                    // line 29: t.colspan(2)
		out.increaseTab();
		out.println("<br>");                                            // line 30: <br>
		out.decreaseTab();
		cspCb0.endComponent(true);                                      // line 31: ]
		t.endTable();                                                   // line 32: @t.endTable();
	}


	protected String name;
	protected int i;
	protected TableMixin t;
}
